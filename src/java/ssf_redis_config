@Configuration
public class AppConfig {

    private Logger logger = Logger.getLogger(AppConfig.class.getName());

    //application.properties
    @Value("${spring.redis.host}")
    private String redisHost;

    @Value("${spring.redis.port}")
    private Integer redisPort;

    @Value("${spring.redis.database}")
    private Integer redisDatabase;

    @Value("${spring.redis.username}")
    private String redisUser;

    @Value("${spring.redis.password}")
    private String redisPassword;

    //myredis
    @Bean(Utils.BEAN_REDIS)
    public RedisTemplate<String, String> createRedisConnection() {

        RedisStandaloneConfiguration config = new RedisStandaloneConfiguration();
        config.setHostName(redisHost);
        config.setPort(redisPort);
        config.setDatabase(redisDatabase);
        config.setUsername(redisUser);
        config.setPassword(redisPassword);

        logger.log(Level.INFO, "Redis database: %d".formatted(redisPort));

        JedisClientConfiguration jedisClient = JedisClientConfiguration
            .builder().build();

        //if indirectly references, inject jedis dependency
        JedisConnectionFactory jedisFac = new JedisConnectionFactory(config, jedisClient);
            jedisFac.afterPropertiesSet();

        RedisTemplate<String, String> template = new RedisTemplate<>();
        template.setConnectionFactory(jedisFac);

        return template;
    }
}