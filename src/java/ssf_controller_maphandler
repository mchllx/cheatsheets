============General============
#Controllers

@Controllers
@RestController

// DispatcherServlet
// requesthandlers
@RequestMapping
@RequestMapping(path={"/", "/index.html"})
@RequestMapping(path="/api/task/", produces=MediaType.APPLICATION_JSON_VALUE)

@GetMapping
@GetMapping(produces={"text/html"})
@GetMapping(produces=MediaType.APPLICATION_JSON_VALUE)
@GetMapping(produces=MediaType.TEXT_HTML_VALUE)

public String index(Model model) {
    model.addAttribute(“currTime”, (new Date()).toString());
    return “index”
    }

public String getRegistration(Model model) {
    model.addAttribute(“registration”
    , new Registration());
    return “registration”;
}

@PostMapping (1 handler can produce and consume)
@PostMapping(path="/api/task/", consumes=MediaType.APPLICATION_JSON_VALUE)
@PostMapping(consumes=MediaType.APPLICATION_JSON_VALUE)
@PostMapping(consumes={"application/json"})

public String createUser(
    @RequestBody MultiValueMap<String, String> form,
    Model model) {
        String name = form.getFirst("name");
        String email = form.getFirst("email");
        String phone = form.getFirst("phone");
}

public String createUser(@ModelAttribute User user Model model) {
}

public ModelAndView addContact(@Valid @ModelAttribute Contact contact, BindingResult bindings, Model model){
    ModelAndView mav = new ModelAndView();

    mav.setStatus(HttpStatus.valueOf(201));
    mav.setViewName("success");
    return max;
}

@RequestParam
/users/search?name=John

@PathVariable
extract a user ID from a URL like /users/123 

